import { Address, Cell, ExternalAddress } from '@ton/core';
declare class BlumJetton {
    static BUY: number;
    static SELL: number;
    address: Address;
    constructor(address: Address);
    static createFromAddress(address: Address): BlumJetton;
    getJettonData(provider: any): Promise<{
        ctxTotalSupply: bigint;
        mintable: bigint;
        ctxAdmin: Address | ExternalAddress | null;
        ctxContent: any;
        ctxWalletCode: any;
    }>;
    getWalletAddress(provider: any, ownerAddress: Address): Promise<{
        jettonOwnerAddress: Address | ExternalAddress | null;
    }>;
    getCoinPrice(provider: any): Promise<{
        coinPrice: bigint;
    }>;
    getCoinsForTons(provider: any, tons: bigint, checkTradingState?: boolean): Promise<{
        fees: bigint;
        coins: bigint;
    }>;
    getTonsForCoins(provider: any, coins: bigint, checkTradingState?: boolean): Promise<{
        fees: bigint;
        tons: bigint;
    }>;
    getBclData(provider: any): Promise<any>;
    getTradingState(provider: any): Promise<{
        tradingEnabled: boolean;
    }>;
    createBuyJetton(provider: any, options: {
        tonAmount: bigint;
        limit: bigint;
        queryId?: number;
        referral?: Cell | null;
        buyerAddress?: Address | null;
        checkTradingState?: boolean;
    }): Promise<{
        to: Address;
        value: bigint;
        body: Cell;
    }>;
}
export { BlumJetton };
